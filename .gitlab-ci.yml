stages:
  - deploy
  - check


deployBeta:
  stage: deploy
  script:
    - curl "https://api.telegram.org/bot$TG_LUPINE_GUY/sendMessage?chat_id=$DEPLOY_LOG_CHANNEL&text=$CI_PROJECT_TITLE%3A $CI_JOB_NAME started⏳ %0A$CI_COMMIT_MESSAGE"
    - sudo apt-get install -y python3-pip
    - sudo pip3 install docker-compose
    - sudo docker image prune -f
    - echo "DISPATCHER_TOKEN=$BETA_TOKEN" > .env
    - echo "TG_LUPINE_GUY=$TG_LUPINE_GUY" >> .env
    - echo "DATABASE_ARGS=$DATABASE_ARGS" >> .env
    - sudo docker-compose -f docker-compose.yml build --no-cache
    - sudo docker-compose -f docker-compose.yml up -d
    - curl "https://api.telegram.org/bot$TG_LUPINE_GUY/sendMessage?chat_id=$DEPLOY_LOG_CHANNEL&text=$CI_PROJECT_TITLE%3A $CI_JOB_NAME finished✅ %0A$CI_COMMIT_MESSAGE"

  only:
    - beta
  tags:
    - helperservers
    - beta


deployMain:
  stage: deploy
  script:
    - curl "https://api.telegram.org/bot$TG_LUPINE_GUY/sendMessage?chat_id=$DEPLOY_LOG_CHANNEL&text=$CI_PROJECT_TITLE%3A $CI_JOB_NAME started⏳ %0A$CI_COMMIT_MESSAGE"
    - sudo apt-get install -y python3-pip
    - sudo pip3 install docker-compose
    - sudo docker image prune -f
    - echo "DISPATCHER_TOKEN=$MAIN_TOKEN" > .env
    - echo "TG_LUPINE_GUY=$TG_LUPINE_GUY" >> .env
    - echo "DATABASE_ARGS=$DATABASE_ARGS" >> .env
    - sudo docker-compose -f docker-compose.yml build --no-cache
    - sudo docker-compose -f docker-compose.yml up -d
    - curl "https://api.telegram.org/bot$TG_LUPINE_GUY/sendMessage?chat_id=$DEPLOY_LOG_CHANNEL&text=$CI_PROJECT_TITLE%3A $CI_JOB_NAME finished✅ %0A$CI_COMMIT_MESSAGE"

  only:
    - master
  tags:
    - mainserver


on_deploy_failure:
  stage: check
  script:
    - curl "https://api.telegram.org/bot$TG_LUPINE_GUY/sendMessage?chat_id=$DEPLOY_LOG_CHANNEL&text=$CI_PROJECT_TITLE%3A deploy failed❌ %0A$CI_COMMIT_MESSAGE"
  when: on_failure

